version: "3.3"

services:
    app:
        container_name: app
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - app-network
        command: >
            sh -c "cp .env.example .env &&
            php artisan key:generate &&
            php artisan jwt:secret &&
            php artisan cache:clear &&
            php artisan route:clear &&
            php artisan optimize &&
            php artisan config:clear &&
            php artisan migrate &&
            php artisan db:seed --class=DiscagemDiretaDistanciaSeeder &&
            php artisan db:seed --class=PermissionSeeder &&
            php artisan db:seed --class=UnidadeFederativaSeeder &&
            php artisan test --filter=CreateFirstUserTest &&
            php artisan test tests/Unit/Services &&
            php artisan test tests/Feature --exclude=CreateFirstUserTest"

    nginx:
        container_name: nginx
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - app-network

    db:
        container_name: db
        image: mysql:5.7.22
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./docker/dbdata:/var/lib/mysql
        ports:
            - "3388:3306"
        networks:
            - app-network

    mailhog:
        container_name: mailhog
        image: mailhog/mailhog
        depends_on:
            - app
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - app-network

    queue:
        container_name: queue
        image: especializati/laravel9-app
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes:
            - ./:/var/www
        depends_on:
            - app
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
